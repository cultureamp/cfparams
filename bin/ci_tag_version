#!/usr/bin/env bash
set -eou pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

function main() {
    local release_version="${1}"
    local release_type="${2}"
    local commit_sha;
    local version_tag;

    commit_sha=$(git rev-parse HEAD)

    echo "Auto-generating version tag ..."

    echo "Current HEAD: $commit_sha"

    local version_options=()

    if [ -n "$release_version" ]; then
        echo "Override version: '${release_version}'"
        version_options+=('--release-as' "${release_version}")
    fi;

    if [ -n "$release_type" ] && [ "$release_type" != "stable" ]; then
        echo "Using pre-release designator: '${release_type}'"
        version_options+=("--prerelease" "${release_type}")
    fi

    configure_git

    # analyses history and creates a tag in the local repo
    npx standard-version "${version_options[@]}"

    version_tag="$(git describe --abbrev=0)"

    echo "standard_version created version '${version_tag}' for this release"

    # create the tag in the origin repo
    # uses the REST API for token authentication
    "$DIR/tag_github" "$version_tag" "$commit_sha"

    # set the version tag as an output of this step
    echo "::set-output name=version_tag::$version_tag"
}

function configure_git() {
    git config --global user.email "actions@github.com"
    git config --global user.name "gh-actions"
}

main "$@"